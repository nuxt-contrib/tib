#!/usr/bin/env node

const path = require('path')
const fs = require('fs')
const { promisify } = require('util')
const Glob = require('glob')

const glob = promisify(Glob)

async function main() {
  const srcPath = path.resolve(__dirname, '../src/browsers') + '/'
  let files = await glob(`${srcPath}/!(utils)/**/*.js`)
  files = files
    .filter(f => !f.includes('webpage') && !f.includes('logging'))
    .map(f => f
      .replace(srcPath, '')
      .replace('.js', '')
      .replace('index', '')
      .replace(/\/+$/, '')
    )
    .sort()

  const imports = files.reduce((acc, f) => {
    return `${acc}  '${f}': () => _interopDefault(import('./${f}')),
`
  }, '')

  fs.writeFileSync(path.join(__dirname, '../src/browsers/index.js'), `/**
 * THIS FILE IS AUTOMATICALLY GENERATED
 * DONT CHANGE ANYTHING MANUALLY
 */

const _interopDefault = i => i.then(m => m.default || m)

export const browsers = {
  ${imports.trim().slice(0, -1)}
}
`, { flag: 'w+' })
}

main().then(() => console.log('Done'))
